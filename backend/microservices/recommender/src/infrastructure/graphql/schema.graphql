type VolunteeringRecommendation @key(fields: "id") {
  id: ID!
  user: User!
  lines: [VolunteeringRecommendationLine]
  createdAt: String!
  modelName: String!,
  modelVersion: String!
}

type VolunteeringRecommendationLine {
  volunteering: Volunteering!
  score: Float!
}

type UserRecommendation @key(fields: "id") {
  id: ID!
  volunteering: Volunteering!
  lines: [UserRecommendationLine]
  createdAt: String!
  modelName: String!,
  modelVersion: String!
}

type UserRecommendationLine {
  user: User!
  score: Float!
}

type User @key(fields: "id") {
  id: ID!
}

type Volunteering @key(fields: "id") {
  id: ID!
}

type Query {
  getVolunteeringRecommendation(id: ID!): VolunteeringRecommendation
  getUserRecommendation(id: ID!): UserRecommendation
}

type Mutation {
  generateVolunteeringRecommendation(userId: ID!): VolunteeringRecommendation
  generateUserRecommendation(volunteeringId: ID!): UserRecommendation
}
